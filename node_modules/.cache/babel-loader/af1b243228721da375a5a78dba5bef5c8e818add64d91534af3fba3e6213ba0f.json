{"ast":null,"code":"var _jsxFileName = \"/Applications/XAMPP/xamppfiles/htdocs/NOTN-Bubbles/src/BubbleStats.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { motion, AnimatePresence } from 'framer-motion';\nimport styled from 'styled-components';\nimport statsData from './data/stats.json';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Container = styled.div`\n  width: 100vw;\n  height: 100vh;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background: #f0f0f0;\n`;\n_c = Container;\nconst BubblesContainer = styled.div`\n  position: relative;\n  width: 80vw;\n  height: 80vh;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n_c2 = BubblesContainer;\nconst SliderContainer = styled.div`\n  position: fixed;\n  bottom: 20px;\n  left: 50%;\n  transform: translateX(-50%);\n  display: flex;\n  gap: 20px;\n  background: white;\n  padding: 20px;\n  border-radius: 10px;\n  box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);\n`;\n_c3 = SliderContainer;\nconst Slider = styled.input`\n  width: 150px;\n`;\n_c4 = Slider;\nconst Bubble = styled(motion.div)`\n  position: absolute;\n  border-radius: 50%;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  background: ${props => props.color || '#4CAF50'};\n  color: white;\n  padding: 0px;\n  cursor: pointer;\n  transition: all 0.3s ease;\n`;\n_c5 = Bubble;\nconst AppName = styled.div`\n  font-weight: bold;\n  text-align: center;\n  margin-bottom: 5px;\n`;\n_c6 = AppName;\nconst UserCount = styled.div`\n  font-size: 0.8em;\n`;\n\n// Add this color mapping object at the top of your file, outside the component\n_c7 = UserCount;\nconst appColors = {\n  'WhatsApp': '#25D366',\n  'Facebook': '#1877F2',\n  'Instagram': '#E4405F',\n  'TikTok': '#000000',\n  'YouTube': '#FF0000',\n  'Twitter': '#1DA1F2',\n  'Snapchat': '#FFFC00',\n  'Pinterest': '#E60023',\n  'LinkedIn': '#0A66C2',\n  'Reddit': '#FF4500',\n  // Add default colors for other apps that might come from the API\n  'TLS': '#2C3E50',\n  'HTTP': '#E74C3C',\n  'DNS': '#3498DB',\n  'Default': '#95A5A6' // Fallback color for unknown apps\n};\nconst getBubbleSize = packets => {\n  if (packets < 5) return 80;\n  if (packets < 10) return 100;\n  if (packets < 15) return 120;\n  if (packets < 20) return 140;\n  if (packets < 30) return 160;\n  if (packets < 40) return 180;\n  return 200;\n};\nconst getFontSize = size => {\n  return `${size * 0.15}px`;\n};\nconst NTOPNG_HOST = \"192.168.1.148\";\nconst NTOPNG_PORT = \"3000\";\nconst IFID = \"1\";\nconst BubbleStats = () => {\n  _s();\n  const [stats, setStats] = useState([]);\n  useEffect(() => {\n    const fetchStats = async () => {\n      try {\n        const response = await fetch(`http://192.168.1.148:3000/lua/rest/v2/get/host/l7/stats.lua?ifid=1}&host=192.168.1.143`);\n        const data = await response.json();\n\n        // Transform the data into the format your component expects\n        const transformedStats = Object.entries(data).map(([name, packets], index) => ({\n          id: index + 1,\n          name: name,\n          packets: packets,\n          color: appColors[name] || appColors['Default'] // Use default color if no specific color is defined\n        }));\n        setStats(transformedStats);\n      } catch (error) {\n        console.error('Error fetching stats:', error);\n      }\n    };\n\n    // Fetch immediately\n    fetchStats();\n\n    // Set up polling every 30 seconds\n    const interval = setInterval(fetchStats, 30000);\n\n    // Cleanup interval on component unmount\n    return () => clearInterval(interval);\n  }, []);\n  const [positions, setPositions] = useState([]);\n  const calculateNewPositions = (currentStats, currentPositions) => {\n    const visibleStats = currentStats.filter(stat => stat.packets > 0);\n    const newPositions = [...currentPositions];\n    const iterations = 50;\n    const repulsionStrength = 200;\n    const centerAttraction = 0.1;\n    const containerWidth = 800;\n    const containerHeight = 800;\n    const padding = 50;\n\n    // Calculate total packets for the center bubble\n    const totalPackets = visibleStats.reduce((sum, stat) => sum + stat.packets, 0);\n    const centerBubbleSize = getBubbleSize(totalPackets);\n    for (let iter = 0; iter < iterations; iter++) {\n      for (let i = 0; i < visibleStats.length; i++) {\n        let forceX = 0;\n        let forceY = 0;\n        const sizeI = getBubbleSize(visibleStats[i].packets);\n\n        // Repulsion from center bubble\n        const dx = newPositions[i].x - 0; // Center is at (0,0)\n        const dy = newPositions[i].y - 0;\n        const distanceToCenter = Math.sqrt(dx * dx + dy * dy);\n        const minDistanceToCenter = (sizeI + centerBubbleSize) / 2 + 20;\n        if (distanceToCenter < minDistanceToCenter) {\n          const force = (minDistanceToCenter - distanceToCenter) / minDistanceToCenter;\n          forceX += dx / distanceToCenter * force * repulsionStrength * 1.5; // Stronger repulsion from center\n          forceY += dy / distanceToCenter * force * repulsionStrength * 1.5;\n        }\n\n        // Repulsion from other visible bubbles\n        for (let j = 0; j < visibleStats.length; j++) {\n          if (i !== j) {\n            const sizeJ = getBubbleSize(visibleStats[j].packets);\n            const minDistance = (sizeI + sizeJ) / 2 + 20;\n            const dx = newPositions[i].x - newPositions[j].x;\n            const dy = newPositions[i].y - newPositions[j].y;\n            const distance = Math.sqrt(dx * dx + dy * dy);\n            if (distance < minDistance) {\n              const force = (minDistance - distance) / minDistance;\n              forceX += dx / distance * force * repulsionStrength;\n              forceY += dy / distance * force * repulsionStrength;\n            }\n          }\n        }\n\n        // Attraction to center (but not too close)\n        const targetDistance = 200; // Desired distance from center\n        const currentDistance = Math.sqrt(newPositions[i].x * newPositions[i].x + newPositions[i].y * newPositions[i].y);\n        const distanceDiff = currentDistance - targetDistance;\n        forceX -= newPositions[i].x / currentDistance * distanceDiff * centerAttraction;\n        forceY -= newPositions[i].y / currentDistance * distanceDiff * centerAttraction;\n\n        // Apply forces\n        newPositions[i].x += forceX * 0.1;\n        newPositions[i].y += forceY * 0.1;\n\n        // Boundary constraints\n        const halfSize = sizeI / 2;\n        if (newPositions[i].x - halfSize < -containerWidth / 2 + padding) {\n          newPositions[i].x = -containerWidth / 2 + padding + halfSize;\n        }\n        if (newPositions[i].x + halfSize > containerWidth / 2 - padding) {\n          newPositions[i].x = containerWidth / 2 - padding - halfSize;\n        }\n        if (newPositions[i].y - halfSize < -containerHeight / 2 + padding) {\n          newPositions[i].y = -containerHeight / 2 + padding + halfSize;\n        }\n        if (newPositions[i].y + halfSize > containerHeight / 2 - padding) {\n          newPositions[i].y = containerHeight / 2 - padding - halfSize;\n        }\n      }\n    }\n    return newPositions;\n  };\n  useEffect(() => {\n    // Initialize positions in a circle\n    const initialPositions = stats.map((stat, index) => {\n      const angle = index / stats.length * 2 * Math.PI;\n      const radius = 150;\n      return {\n        x: Math.cos(angle) * radius,\n        y: Math.sin(angle) * radius\n      };\n    });\n    setPositions(initialPositions);\n  }, [stats.length]);\n  useEffect(() => {\n    if (positions.length > 0) {\n      const newPositions = calculateNewPositions(stats, positions);\n      setPositions(newPositions);\n    }\n  }, [stats]);\n  const handleSliderChange = (id, value) => {\n    setStats(prevStats => prevStats.map(stat => stat.id === id ? {\n      ...stat,\n      packets: parseInt(value)\n    } : stat));\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(BubblesContainer, {\n      children: /*#__PURE__*/_jsxDEV(AnimatePresence, {\n        children: [/*#__PURE__*/_jsxDEV(Bubble, {\n          color: \"#333333\",\n          initial: {\n            scale: 0\n          },\n          animate: {\n            scale: 1,\n            width: getBubbleSize(stats.reduce((sum, stat) => sum + stat.packets, 0)),\n            height: getBubbleSize(stats.reduce((sum, stat) => sum + stat.packets, 0)),\n            x: 0,\n            y: 0\n          },\n          transition: {\n            type: \"spring\",\n            stiffness: 260,\n            damping: 20\n          },\n          children: [/*#__PURE__*/_jsxDEV(AppName, {\n            style: {\n              fontSize: getFontSize(getBubbleSize(stats.reduce((sum, stat) => sum + stat.packets, 0)))\n            },\n            children: \"Total Packets\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 268,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(UserCount, {\n            style: {\n              fontSize: getFontSize(getBubbleSize(stats.reduce((sum, stat) => sum + stat.packets, 0)))\n            },\n            children: stats.reduce((sum, stat) => sum + stat.packets, 0)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 271,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 252,\n          columnNumber: 21\n        }, this), stats.filter(stat => stat.packets > 0).map((stat, index) => {\n          const size = getBubbleSize(stat.packets);\n          const position = positions[index] || {\n            x: 0,\n            y: 0\n          };\n          return /*#__PURE__*/_jsxDEV(Bubble, {\n            color: stat.color,\n            initial: {\n              scale: 0\n            },\n            animate: {\n              scale: 1,\n              width: size,\n              height: size,\n              x: position.x,\n              y: position.y\n            },\n            exit: {\n              scale: 0\n            },\n            transition: {\n              type: \"spring\",\n              stiffness: 260,\n              damping: 20\n            },\n            children: [/*#__PURE__*/_jsxDEV(AppName, {\n              style: {\n                fontSize: getFontSize(size)\n              },\n              children: stat.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 300,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(UserCount, {\n              style: {\n                fontSize: getFontSize(size) * 0.8\n              },\n              children: [stat.packets, \" packets\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 303,\n              columnNumber: 37\n            }, this)]\n          }, stat.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 282,\n            columnNumber: 33\n          }, this);\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 250,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 249,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(SliderContainer, {\n      children: stats.map(stat => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: stat.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 314,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Slider, {\n          type: \"range\",\n          min: \"0\",\n          max: \"50\",\n          value: stat.packets,\n          onChange: e => handleSliderChange(stat.id, e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 315,\n          columnNumber: 25\n        }, this)]\n      }, stat.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 313,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 311,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 248,\n    columnNumber: 9\n  }, this);\n};\n_s(BubbleStats, \"wosm/QG+AFRqZ00zYzD5M4iYL/I=\");\n_c8 = BubbleStats;\nexport default BubbleStats;\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8;\n$RefreshReg$(_c, \"Container\");\n$RefreshReg$(_c2, \"BubblesContainer\");\n$RefreshReg$(_c3, \"SliderContainer\");\n$RefreshReg$(_c4, \"Slider\");\n$RefreshReg$(_c5, \"Bubble\");\n$RefreshReg$(_c6, \"AppName\");\n$RefreshReg$(_c7, \"UserCount\");\n$RefreshReg$(_c8, \"BubbleStats\");","map":{"version":3,"names":["React","useState","useEffect","motion","AnimatePresence","styled","statsData","jsxDEV","_jsxDEV","Container","div","_c","BubblesContainer","_c2","SliderContainer","_c3","Slider","input","_c4","Bubble","props","color","_c5","AppName","_c6","UserCount","_c7","appColors","getBubbleSize","packets","getFontSize","size","NTOPNG_HOST","NTOPNG_PORT","IFID","BubbleStats","_s","stats","setStats","fetchStats","response","fetch","data","json","transformedStats","Object","entries","map","name","index","id","error","console","interval","setInterval","clearInterval","positions","setPositions","calculateNewPositions","currentStats","currentPositions","visibleStats","filter","stat","newPositions","iterations","repulsionStrength","centerAttraction","containerWidth","containerHeight","padding","totalPackets","reduce","sum","centerBubbleSize","iter","i","length","forceX","forceY","sizeI","dx","x","dy","y","distanceToCenter","Math","sqrt","minDistanceToCenter","force","j","sizeJ","minDistance","distance","targetDistance","currentDistance","distanceDiff","halfSize","initialPositions","angle","PI","radius","cos","sin","handleSliderChange","value","prevStats","parseInt","children","initial","scale","animate","width","height","transition","type","stiffness","damping","style","fontSize","fileName","_jsxFileName","lineNumber","columnNumber","position","exit","min","max","onChange","e","target","_c8","$RefreshReg$"],"sources":["/Applications/XAMPP/xamppfiles/htdocs/NOTN-Bubbles/src/BubbleStats.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { motion, AnimatePresence } from 'framer-motion';\nimport styled from 'styled-components';\nimport statsData from './data/stats.json';\n\nconst Container = styled.div`\n  width: 100vw;\n  height: 100vh;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background: #f0f0f0;\n`;\n\nconst BubblesContainer = styled.div`\n  position: relative;\n  width: 80vw;\n  height: 80vh;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst SliderContainer = styled.div`\n  position: fixed;\n  bottom: 20px;\n  left: 50%;\n  transform: translateX(-50%);\n  display: flex;\n  gap: 20px;\n  background: white;\n  padding: 20px;\n  border-radius: 10px;\n  box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);\n`;\n\nconst Slider = styled.input`\n  width: 150px;\n`;\n\nconst Bubble = styled(motion.div)`\n  position: absolute;\n  border-radius: 50%;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  background: ${props => props.color || '#4CAF50'};\n  color: white;\n  padding: 0px;\n  cursor: pointer;\n  transition: all 0.3s ease;\n`;\n\nconst AppName = styled.div`\n  font-weight: bold;\n  text-align: center;\n  margin-bottom: 5px;\n`;\n\nconst UserCount = styled.div`\n  font-size: 0.8em;\n`;\n\n// Add this color mapping object at the top of your file, outside the component\nconst appColors = {\n    'WhatsApp': '#25D366',\n    'Facebook': '#1877F2',\n    'Instagram': '#E4405F',\n    'TikTok': '#000000',\n    'YouTube': '#FF0000',\n    'Twitter': '#1DA1F2',\n    'Snapchat': '#FFFC00',\n    'Pinterest': '#E60023',\n    'LinkedIn': '#0A66C2',\n    'Reddit': '#FF4500',\n    // Add default colors for other apps that might come from the API\n    'TLS': '#2C3E50',\n    'HTTP': '#E74C3C',\n    'DNS': '#3498DB',\n    'Default': '#95A5A6' // Fallback color for unknown apps\n};\n\nconst getBubbleSize = (packets) => {\n    if (packets < 5) return 80;\n    if (packets < 10) return 100;\n    if (packets < 15) return 120;\n    if (packets < 20) return 140;\n    if (packets < 30) return 160;\n    if (packets < 40) return 180;\n    return 200;\n};\n\nconst getFontSize = (size) => {\n    return `${size * 0.15}px`;\n};\n\nconst NTOPNG_HOST = \"192.168.1.148\";\nconst NTOPNG_PORT = \"3000\";\nconst IFID = \"1\";\n\nconst BubbleStats = () => {\n    const [stats, setStats] = useState([]);\n\n    useEffect(() => {\n        const fetchStats = async () => {\n            try {\n                const response = await fetch(`http://192.168.1.148:3000/lua/rest/v2/get/host/l7/stats.lua?ifid=1}&host=192.168.1.143`);\n                const data = await response.json();\n\n                // Transform the data into the format your component expects\n                const transformedStats = Object.entries(data).map(([name, packets], index) => ({\n                    id: index + 1,\n                    name: name,\n                    packets: packets,\n                    color: appColors[name] || appColors['Default'] // Use default color if no specific color is defined\n                }));\n\n                setStats(transformedStats);\n            } catch (error) {\n                console.error('Error fetching stats:', error);\n            }\n        };\n\n        // Fetch immediately\n        fetchStats();\n\n        // Set up polling every 30 seconds\n        const interval = setInterval(fetchStats, 30000);\n\n        // Cleanup interval on component unmount\n        return () => clearInterval(interval);\n    }, []);\n\n    const [positions, setPositions] = useState([]);\n\n    const calculateNewPositions = (currentStats, currentPositions) => {\n        const visibleStats = currentStats.filter(stat => stat.packets > 0);\n        const newPositions = [...currentPositions];\n        const iterations = 50;\n        const repulsionStrength = 200;\n        const centerAttraction = 0.1;\n\n        const containerWidth = 800;\n        const containerHeight = 800;\n        const padding = 50;\n\n        // Calculate total packets for the center bubble\n        const totalPackets = visibleStats.reduce((sum, stat) => sum + stat.packets, 0);\n        const centerBubbleSize = getBubbleSize(totalPackets);\n\n        for (let iter = 0; iter < iterations; iter++) {\n            for (let i = 0; i < visibleStats.length; i++) {\n                let forceX = 0;\n                let forceY = 0;\n                const sizeI = getBubbleSize(visibleStats[i].packets);\n\n                // Repulsion from center bubble\n                const dx = newPositions[i].x - 0; // Center is at (0,0)\n                const dy = newPositions[i].y - 0;\n                const distanceToCenter = Math.sqrt(dx * dx + dy * dy);\n                const minDistanceToCenter = (sizeI + centerBubbleSize) / 2 + 20;\n\n                if (distanceToCenter < minDistanceToCenter) {\n                    const force = (minDistanceToCenter - distanceToCenter) / minDistanceToCenter;\n                    forceX += (dx / distanceToCenter) * force * repulsionStrength * 1.5; // Stronger repulsion from center\n                    forceY += (dy / distanceToCenter) * force * repulsionStrength * 1.5;\n                }\n\n                // Repulsion from other visible bubbles\n                for (let j = 0; j < visibleStats.length; j++) {\n                    if (i !== j) {\n                        const sizeJ = getBubbleSize(visibleStats[j].packets);\n                        const minDistance = (sizeI + sizeJ) / 2 + 20;\n\n                        const dx = newPositions[i].x - newPositions[j].x;\n                        const dy = newPositions[i].y - newPositions[j].y;\n                        const distance = Math.sqrt(dx * dx + dy * dy);\n\n                        if (distance < minDistance) {\n                            const force = (minDistance - distance) / minDistance;\n                            forceX += (dx / distance) * force * repulsionStrength;\n                            forceY += (dy / distance) * force * repulsionStrength;\n                        }\n                    }\n                }\n\n                // Attraction to center (but not too close)\n                const targetDistance = 200; // Desired distance from center\n                const currentDistance = Math.sqrt(newPositions[i].x * newPositions[i].x + newPositions[i].y * newPositions[i].y);\n                const distanceDiff = currentDistance - targetDistance;\n                forceX -= (newPositions[i].x / currentDistance) * distanceDiff * centerAttraction;\n                forceY -= (newPositions[i].y / currentDistance) * distanceDiff * centerAttraction;\n\n                // Apply forces\n                newPositions[i].x += forceX * 0.1;\n                newPositions[i].y += forceY * 0.1;\n\n                // Boundary constraints\n                const halfSize = sizeI / 2;\n                if (newPositions[i].x - halfSize < -containerWidth / 2 + padding) {\n                    newPositions[i].x = -containerWidth / 2 + padding + halfSize;\n                }\n                if (newPositions[i].x + halfSize > containerWidth / 2 - padding) {\n                    newPositions[i].x = containerWidth / 2 - padding - halfSize;\n                }\n                if (newPositions[i].y - halfSize < -containerHeight / 2 + padding) {\n                    newPositions[i].y = -containerHeight / 2 + padding + halfSize;\n                }\n                if (newPositions[i].y + halfSize > containerHeight / 2 - padding) {\n                    newPositions[i].y = containerHeight / 2 - padding - halfSize;\n                }\n            }\n        }\n\n        return newPositions;\n    };\n\n    useEffect(() => {\n        // Initialize positions in a circle\n        const initialPositions = stats.map((stat, index) => {\n            const angle = (index / stats.length) * 2 * Math.PI;\n            const radius = 150;\n            return {\n                x: Math.cos(angle) * radius,\n                y: Math.sin(angle) * radius\n            };\n        });\n        setPositions(initialPositions);\n    }, [stats.length]);\n\n    useEffect(() => {\n        if (positions.length > 0) {\n            const newPositions = calculateNewPositions(stats, positions);\n            setPositions(newPositions);\n        }\n    }, [stats]);\n\n    const handleSliderChange = (id, value) => {\n        setStats(prevStats =>\n            prevStats.map(stat =>\n                stat.id === id ? { ...stat, packets: parseInt(value) } : stat\n            )\n        );\n    };\n\n    return (\n        <Container>\n            <BubblesContainer>\n                <AnimatePresence>\n                    {/* Center Total Packets Bubble */}\n                    <Bubble\n                        color=\"#333333\"\n                        initial={{ scale: 0 }}\n                        animate={{\n                            scale: 1,\n                            width: getBubbleSize(stats.reduce((sum, stat) => sum + stat.packets, 0)),\n                            height: getBubbleSize(stats.reduce((sum, stat) => sum + stat.packets, 0)),\n                            x: 0,\n                            y: 0,\n                        }}\n                        transition={{\n                            type: \"spring\",\n                            stiffness: 260,\n                            damping: 20\n                        }}\n                    >\n                        <AppName style={{ fontSize: getFontSize(getBubbleSize(stats.reduce((sum, stat) => sum + stat.packets, 0))) }}>\n                            Total Packets\n                        </AppName>\n                        <UserCount style={{ fontSize: getFontSize(getBubbleSize(stats.reduce((sum, stat) => sum + stat.packets, 0))) }}>\n                            {stats.reduce((sum, stat) => sum + stat.packets, 0)}\n                        </UserCount>\n                    </Bubble>\n                    {/* Other Bubbles */}\n                    {stats\n                        .filter(stat => stat.packets > 0)\n                        .map((stat, index) => {\n                            const size = getBubbleSize(stat.packets);\n                            const position = positions[index] || { x: 0, y: 0 };\n                            return (\n                                <Bubble\n                                    key={stat.id}\n                                    color={stat.color}\n                                    initial={{ scale: 0 }}\n                                    animate={{\n                                        scale: 1,\n                                        width: size,\n                                        height: size,\n                                        x: position.x,\n                                        y: position.y,\n                                    }}\n                                    exit={{ scale: 0 }}\n                                    transition={{\n                                        type: \"spring\",\n                                        stiffness: 260,\n                                        damping: 20\n                                    }}\n                                >\n                                    <AppName style={{ fontSize: getFontSize(size) }}>\n                                        {stat.name}\n                                    </AppName>\n                                    <UserCount style={{ fontSize: getFontSize(size) * 0.8 }}>\n                                        {stat.packets} packets\n                                    </UserCount>\n                                </Bubble>\n                            );\n                        })}\n                </AnimatePresence>\n            </BubblesContainer>\n            <SliderContainer>\n                {stats.map((stat) => (\n                    <div key={stat.id}>\n                        <div>{stat.name}</div>\n                        <Slider\n                            type=\"range\"\n                            min=\"0\"\n                            max=\"50\"\n                            value={stat.packets}\n                            onChange={(e) => handleSliderChange(stat.id, e.target.value)}\n                        />\n                    </div>\n                ))}\n            </SliderContainer>\n        </Container>\n    );\n};\n\nexport default BubbleStats; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}