{"ast":null,"code":"var _jsxFileName = \"/Applications/XAMPP/xamppfiles/htdocs/NOTN-Bubbles/src/BubbleStats.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { motion, AnimatePresence } from 'framer-motion';\nimport styled from 'styled-components';\nimport statsData from './data/stats.json';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Container = styled.div`\n  width: 100vw;\n  height: 100vh;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background: #f0f0f0;\n`;\n_c = Container;\nconst BubblesContainer = styled.div`\n  position: relative;\n  width: 80vw;\n  height: 80vh;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n_c2 = BubblesContainer;\nconst SliderContainer = styled.div`\n  position: fixed;\n  bottom: 20px;\n  left: 50%;\n  transform: translateX(-50%);\n  display: flex;\n  gap: 20px;\n  background: white;\n  padding: 20px;\n  border-radius: 10px;\n  box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);\n`;\n_c3 = SliderContainer;\nconst Slider = styled.input`\n  width: 150px;\n`;\n_c4 = Slider;\nconst Bubble = styled(motion.div)`\n  position: absolute;\n  border-radius: 50%;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  background: ${props => props.color || '#4CAF50'};\n  color: white;\n  padding: 0px;\n  cursor: pointer;\n  transition: all 0.3s ease;\n`;\n_c5 = Bubble;\nconst AppName = styled.div`\n  font-weight: bold;\n  text-align: center;\n  margin-bottom: 5px;\n`;\n_c6 = AppName;\nconst PacketCount = styled.div`\n  font-size: 0.8em;\n`;\n_c7 = PacketCount;\nconst getBubbleSize = packets => {\n  if (packets < 5) return 80;\n  if (packets < 10) return 100;\n  if (packets < 15) return 120;\n  if (packets < 20) return 140;\n  if (packets < 30) return 160;\n  if (packets < 40) return 180;\n  return 200;\n};\nconst getFontSize = size => {\n  return `${size * 0.15}px`;\n};\nconst getRandomColor = () => {\n  const colors = ['#4CAF50', '#2196F3', '#9C27B0', '#FF9800', '#E91E63', '#00BCD4'];\n  return colors[Math.floor(Math.random() * colors.length)];\n};\nconst BubbleStats = () => {\n  _s();\n  const [stats, setStats] = useState(statsData.rsp.map(item => ({\n    ...item,\n    color: getRandomColor()\n  })));\n  const [positions, setPositions] = useState([]);\n  const calculateNewPositions = (currentStats, currentPositions) => {\n    const visibleStats = currentStats.filter(stat => stat.count > 0);\n    const newPositions = [...currentPositions];\n    const iterations = 50;\n    const repulsionStrength = 200;\n    const centerAttraction = 0.1;\n    const containerWidth = 800;\n    const containerHeight = 800;\n    const padding = 50;\n\n    // Calculate total packets for the center bubble\n    const totalPackets = visibleStats.reduce((sum, stat) => sum + stat.count, 0);\n    const centerBubbleSize = getBubbleSize(totalPackets);\n    for (let iter = 0; iter < iterations; iter++) {\n      for (let i = 0; i < visibleStats.length; i++) {\n        let forceX = 0;\n        let forceY = 0;\n        const sizeI = getBubbleSize(visibleStats[i].count);\n\n        // Repulsion from center bubble\n        const dx = newPositions[i].x - 0;\n        const dy = newPositions[i].y - 0;\n        const distanceToCenter = Math.sqrt(dx * dx + dy * dy);\n        const minDistanceToCenter = (sizeI + centerBubbleSize) / 2 + 20;\n        if (distanceToCenter < minDistanceToCenter) {\n          const force = (minDistanceToCenter - distanceToCenter) / minDistanceToCenter;\n          forceX += dx / distanceToCenter * force * repulsionStrength * 1.5;\n          forceY += dy / distanceToCenter * force * repulsionStrength * 1.5;\n        }\n\n        // Repulsion from other visible bubbles\n        for (let j = 0; j < visibleStats.length; j++) {\n          if (i !== j) {\n            const sizeJ = getBubbleSize(visibleStats[j].count);\n            const minDistance = (sizeI + sizeJ) / 2 + 20;\n            const dx = newPositions[i].x - newPositions[j].x;\n            const dy = newPositions[i].y - newPositions[j].y;\n            const distance = Math.sqrt(dx * dx + dy * dy);\n            if (distance < minDistance) {\n              const force = (minDistance - distance) / minDistance;\n              forceX += dx / distance * force * repulsionStrength;\n              forceY += dy / distance * force * repulsionStrength;\n            }\n          }\n        }\n\n        // Attraction to center (but not too close)\n        const targetDistance = 200;\n        const currentDistance = Math.sqrt(newPositions[i].x * newPositions[i].x + newPositions[i].y * newPositions[i].y);\n        const distanceDiff = currentDistance - targetDistance;\n        forceX -= newPositions[i].x / currentDistance * distanceDiff * centerAttraction;\n        forceY -= newPositions[i].y / currentDistance * distanceDiff * centerAttraction;\n\n        // Apply forces\n        newPositions[i].x += forceX * 0.1;\n        newPositions[i].y += forceY * 0.1;\n\n        // Boundary constraints\n        const halfSize = sizeI / 2;\n        if (newPositions[i].x - halfSize < -containerWidth / 2 + padding) {\n          newPositions[i].x = -containerWidth / 2 + padding + halfSize;\n        }\n        if (newPositions[i].x + halfSize > containerWidth / 2 - padding) {\n          newPositions[i].x = containerWidth / 2 - padding - halfSize;\n        }\n        if (newPositions[i].y - halfSize < -containerHeight / 2 + padding) {\n          newPositions[i].y = -containerHeight / 2 + padding + halfSize;\n        }\n        if (newPositions[i].y + halfSize > containerHeight / 2 - padding) {\n          newPositions[i].y = containerHeight / 2 - padding - halfSize;\n        }\n      }\n    }\n    return newPositions;\n  };\n  useEffect(() => {\n    // Initialize positions in a circle\n    const initialPositions = stats.map((stat, index) => {\n      const angle = index / stats.length * 2 * Math.PI;\n      const radius = 150;\n      return {\n        x: Math.cos(angle) * radius,\n        y: Math.sin(angle) * radius\n      };\n    });\n    setPositions(initialPositions);\n  }, [stats.length]);\n  useEffect(() => {\n    if (positions.length > 0) {\n      const newPositions = calculateNewPositions(stats, positions);\n      setPositions(newPositions);\n    }\n  }, [stats]);\n  const handleSliderChange = (name, value) => {\n    setStats(prevStats => prevStats.map(stat => stat.name === name ? {\n      ...stat,\n      count: parseInt(value)\n    } : stat));\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(BubblesContainer, {\n      children: /*#__PURE__*/_jsxDEV(AnimatePresence, {\n        children: [/*#__PURE__*/_jsxDEV(Bubble, {\n          color: \"#333333\",\n          initial: {\n            scale: 0\n          },\n          animate: {\n            scale: 1,\n            width: getBubbleSize(stats.reduce((sum, stat) => sum + stat.count, 0)),\n            height: getBubbleSize(stats.reduce((sum, stat) => sum + stat.count, 0)),\n            x: 0,\n            y: 0\n          },\n          transition: {\n            type: \"spring\",\n            stiffness: 260,\n            damping: 20\n          },\n          children: [/*#__PURE__*/_jsxDEV(AppName, {\n            style: {\n              fontSize: getFontSize(getBubbleSize(stats.reduce((sum, stat) => sum + stat.count, 0)))\n            },\n            children: \"Total Packets\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 222,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(PacketCount, {\n            style: {\n              fontSize: getFontSize(getBubbleSize(stats.reduce((sum, stat) => sum + stat.count, 0)))\n            },\n            children: stats.reduce((sum, stat) => sum + stat.count, 0)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 225,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 21\n        }, this), stats.filter(stat => stat.count > 0).map((stat, index) => {\n          const size = getBubbleSize(stat.count);\n          const position = positions[index] || {\n            x: 0,\n            y: 0\n          };\n          return /*#__PURE__*/_jsxDEV(Bubble, {\n            color: stat.color,\n            initial: {\n              scale: 0\n            },\n            animate: {\n              scale: 1,\n              width: size,\n              height: size,\n              x: position.x,\n              y: position.y\n            },\n            exit: {\n              scale: 0\n            },\n            transition: {\n              type: \"spring\",\n              stiffness: 260,\n              damping: 20\n            },\n            children: [/*#__PURE__*/_jsxDEV(AppName, {\n              style: {\n                fontSize: getFontSize(size)\n              },\n              children: stat.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 254,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(PacketCount, {\n              style: {\n                fontSize: getFontSize(size) * 0.8\n              },\n              children: [stat.count, \" packets\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 257,\n              columnNumber: 37\n            }, this)]\n          }, stat.name, true, {\n            fileName: _jsxFileName,\n            lineNumber: 236,\n            columnNumber: 33\n          }, this);\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(SliderContainer, {\n      children: stats.map(stat => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: stat.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 268,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Slider, {\n          type: \"range\",\n          min: \"0\",\n          max: \"100\",\n          value: stat.count,\n          onChange: e => handleSliderChange(stat.name, e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 269,\n          columnNumber: 25\n        }, this)]\n      }, stat.name, true, {\n        fileName: _jsxFileName,\n        lineNumber: 267,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 265,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 202,\n    columnNumber: 9\n  }, this);\n};\n_s(BubbleStats, \"vObAhM60fzFJPK0IYYBeMAtnIzo=\");\n_c8 = BubbleStats;\nexport default BubbleStats;\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8;\n$RefreshReg$(_c, \"Container\");\n$RefreshReg$(_c2, \"BubblesContainer\");\n$RefreshReg$(_c3, \"SliderContainer\");\n$RefreshReg$(_c4, \"Slider\");\n$RefreshReg$(_c5, \"Bubble\");\n$RefreshReg$(_c6, \"AppName\");\n$RefreshReg$(_c7, \"PacketCount\");\n$RefreshReg$(_c8, \"BubbleStats\");","map":{"version":3,"names":["React","useState","useEffect","motion","AnimatePresence","styled","statsData","jsxDEV","_jsxDEV","Container","div","_c","BubblesContainer","_c2","SliderContainer","_c3","Slider","input","_c4","Bubble","props","color","_c5","AppName","_c6","PacketCount","_c7","getBubbleSize","packets","getFontSize","size","getRandomColor","colors","Math","floor","random","length","BubbleStats","_s","stats","setStats","rsp","map","item","positions","setPositions","calculateNewPositions","currentStats","currentPositions","visibleStats","filter","stat","count","newPositions","iterations","repulsionStrength","centerAttraction","containerWidth","containerHeight","padding","totalPackets","reduce","sum","centerBubbleSize","iter","i","forceX","forceY","sizeI","dx","x","dy","y","distanceToCenter","sqrt","minDistanceToCenter","force","j","sizeJ","minDistance","distance","targetDistance","currentDistance","distanceDiff","halfSize","initialPositions","index","angle","PI","radius","cos","sin","handleSliderChange","name","value","prevStats","parseInt","children","initial","scale","animate","width","height","transition","type","stiffness","damping","style","fontSize","fileName","_jsxFileName","lineNumber","columnNumber","position","exit","min","max","onChange","e","target","_c8","$RefreshReg$"],"sources":["/Applications/XAMPP/xamppfiles/htdocs/NOTN-Bubbles/src/BubbleStats.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { motion, AnimatePresence } from 'framer-motion';\nimport styled from 'styled-components';\nimport statsData from './data/stats.json';\n\nconst Container = styled.div`\n  width: 100vw;\n  height: 100vh;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background: #f0f0f0;\n`;\n\nconst BubblesContainer = styled.div`\n  position: relative;\n  width: 80vw;\n  height: 80vh;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst SliderContainer = styled.div`\n  position: fixed;\n  bottom: 20px;\n  left: 50%;\n  transform: translateX(-50%);\n  display: flex;\n  gap: 20px;\n  background: white;\n  padding: 20px;\n  border-radius: 10px;\n  box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);\n`;\n\nconst Slider = styled.input`\n  width: 150px;\n`;\n\nconst Bubble = styled(motion.div)`\n  position: absolute;\n  border-radius: 50%;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  background: ${props => props.color || '#4CAF50'};\n  color: white;\n  padding: 0px;\n  cursor: pointer;\n  transition: all 0.3s ease;\n`;\n\nconst AppName = styled.div`\n  font-weight: bold;\n  text-align: center;\n  margin-bottom: 5px;\n`;\n\nconst PacketCount = styled.div`\n  font-size: 0.8em;\n`;\n\nconst getBubbleSize = (packets) => {\n    if (packets < 5) return 80;\n    if (packets < 10) return 100;\n    if (packets < 15) return 120;\n    if (packets < 20) return 140;\n    if (packets < 30) return 160;\n    if (packets < 40) return 180;\n    return 200;\n};\n\nconst getFontSize = (size) => {\n    return `${size * 0.15}px`;\n};\n\nconst getRandomColor = () => {\n    const colors = ['#4CAF50', '#2196F3', '#9C27B0', '#FF9800', '#E91E63', '#00BCD4'];\n    return colors[Math.floor(Math.random() * colors.length)];\n};\n\nconst BubbleStats = () => {\n    const [stats, setStats] = useState(statsData.rsp.map(item => ({\n        ...item,\n        color: getRandomColor()\n    })));\n    const [positions, setPositions] = useState([]);\n\n    const calculateNewPositions = (currentStats, currentPositions) => {\n        const visibleStats = currentStats.filter(stat => stat.count > 0);\n        const newPositions = [...currentPositions];\n        const iterations = 50;\n        const repulsionStrength = 200;\n        const centerAttraction = 0.1;\n\n        const containerWidth = 800;\n        const containerHeight = 800;\n        const padding = 50;\n\n        // Calculate total packets for the center bubble\n        const totalPackets = visibleStats.reduce((sum, stat) => sum + stat.count, 0);\n        const centerBubbleSize = getBubbleSize(totalPackets);\n\n        for (let iter = 0; iter < iterations; iter++) {\n            for (let i = 0; i < visibleStats.length; i++) {\n                let forceX = 0;\n                let forceY = 0;\n                const sizeI = getBubbleSize(visibleStats[i].count);\n\n                // Repulsion from center bubble\n                const dx = newPositions[i].x - 0;\n                const dy = newPositions[i].y - 0;\n                const distanceToCenter = Math.sqrt(dx * dx + dy * dy);\n                const minDistanceToCenter = (sizeI + centerBubbleSize) / 2 + 20;\n\n                if (distanceToCenter < minDistanceToCenter) {\n                    const force = (minDistanceToCenter - distanceToCenter) / minDistanceToCenter;\n                    forceX += (dx / distanceToCenter) * force * repulsionStrength * 1.5;\n                    forceY += (dy / distanceToCenter) * force * repulsionStrength * 1.5;\n                }\n\n                // Repulsion from other visible bubbles\n                for (let j = 0; j < visibleStats.length; j++) {\n                    if (i !== j) {\n                        const sizeJ = getBubbleSize(visibleStats[j].count);\n                        const minDistance = (sizeI + sizeJ) / 2 + 20;\n\n                        const dx = newPositions[i].x - newPositions[j].x;\n                        const dy = newPositions[i].y - newPositions[j].y;\n                        const distance = Math.sqrt(dx * dx + dy * dy);\n\n                        if (distance < minDistance) {\n                            const force = (minDistance - distance) / minDistance;\n                            forceX += (dx / distance) * force * repulsionStrength;\n                            forceY += (dy / distance) * force * repulsionStrength;\n                        }\n                    }\n                }\n\n                // Attraction to center (but not too close)\n                const targetDistance = 200;\n                const currentDistance = Math.sqrt(newPositions[i].x * newPositions[i].x + newPositions[i].y * newPositions[i].y);\n                const distanceDiff = currentDistance - targetDistance;\n                forceX -= (newPositions[i].x / currentDistance) * distanceDiff * centerAttraction;\n                forceY -= (newPositions[i].y / currentDistance) * distanceDiff * centerAttraction;\n\n                // Apply forces\n                newPositions[i].x += forceX * 0.1;\n                newPositions[i].y += forceY * 0.1;\n\n                // Boundary constraints\n                const halfSize = sizeI / 2;\n                if (newPositions[i].x - halfSize < -containerWidth / 2 + padding) {\n                    newPositions[i].x = -containerWidth / 2 + padding + halfSize;\n                }\n                if (newPositions[i].x + halfSize > containerWidth / 2 - padding) {\n                    newPositions[i].x = containerWidth / 2 - padding - halfSize;\n                }\n                if (newPositions[i].y - halfSize < -containerHeight / 2 + padding) {\n                    newPositions[i].y = -containerHeight / 2 + padding + halfSize;\n                }\n                if (newPositions[i].y + halfSize > containerHeight / 2 - padding) {\n                    newPositions[i].y = containerHeight / 2 - padding - halfSize;\n                }\n            }\n        }\n\n        return newPositions;\n    };\n\n    useEffect(() => {\n        // Initialize positions in a circle\n        const initialPositions = stats.map((stat, index) => {\n            const angle = (index / stats.length) * 2 * Math.PI;\n            const radius = 150;\n            return {\n                x: Math.cos(angle) * radius,\n                y: Math.sin(angle) * radius\n            };\n        });\n        setPositions(initialPositions);\n    }, [stats.length]);\n\n    useEffect(() => {\n        if (positions.length > 0) {\n            const newPositions = calculateNewPositions(stats, positions);\n            setPositions(newPositions);\n        }\n    }, [stats]);\n\n    const handleSliderChange = (name, value) => {\n        setStats(prevStats =>\n            prevStats.map(stat =>\n                stat.name === name ? { ...stat, count: parseInt(value) } : stat\n            )\n        );\n    };\n\n    return (\n        <Container>\n            <BubblesContainer>\n                <AnimatePresence>\n                    {/* Center Total Packets Bubble */}\n                    <Bubble\n                        color=\"#333333\"\n                        initial={{ scale: 0 }}\n                        animate={{\n                            scale: 1,\n                            width: getBubbleSize(stats.reduce((sum, stat) => sum + stat.count, 0)),\n                            height: getBubbleSize(stats.reduce((sum, stat) => sum + stat.count, 0)),\n                            x: 0,\n                            y: 0,\n                        }}\n                        transition={{\n                            type: \"spring\",\n                            stiffness: 260,\n                            damping: 20\n                        }}\n                    >\n                        <AppName style={{ fontSize: getFontSize(getBubbleSize(stats.reduce((sum, stat) => sum + stat.count, 0))) }}>\n                            Total Packets\n                        </AppName>\n                        <PacketCount style={{ fontSize: getFontSize(getBubbleSize(stats.reduce((sum, stat) => sum + stat.count, 0))) }}>\n                            {stats.reduce((sum, stat) => sum + stat.count, 0)}\n                        </PacketCount>\n                    </Bubble>\n                    {/* Other Bubbles */}\n                    {stats\n                        .filter(stat => stat.count > 0)\n                        .map((stat, index) => {\n                            const size = getBubbleSize(stat.count);\n                            const position = positions[index] || { x: 0, y: 0 };\n                            return (\n                                <Bubble\n                                    key={stat.name}\n                                    color={stat.color}\n                                    initial={{ scale: 0 }}\n                                    animate={{\n                                        scale: 1,\n                                        width: size,\n                                        height: size,\n                                        x: position.x,\n                                        y: position.y,\n                                    }}\n                                    exit={{ scale: 0 }}\n                                    transition={{\n                                        type: \"spring\",\n                                        stiffness: 260,\n                                        damping: 20\n                                    }}\n                                >\n                                    <AppName style={{ fontSize: getFontSize(size) }}>\n                                        {stat.name}\n                                    </AppName>\n                                    <PacketCount style={{ fontSize: getFontSize(size) * 0.8 }}>\n                                        {stat.count} packets\n                                    </PacketCount>\n                                </Bubble>\n                            );\n                        })}\n                </AnimatePresence>\n            </BubblesContainer>\n            <SliderContainer>\n                {stats.map((stat) => (\n                    <div key={stat.name}>\n                        <div>{stat.name}</div>\n                        <Slider\n                            type=\"range\"\n                            min=\"0\"\n                            max=\"100\"\n                            value={stat.count}\n                            onChange={(e) => handleSliderChange(stat.name, e.target.value)}\n                        />\n                    </div>\n                ))}\n            </SliderContainer>\n        </Container>\n    );\n};\n\nexport default BubbleStats; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}